FROM ubuntu:20.04

### Install bash, vim for easier operation in the future
RUN apt-get update
RUN apt-get install -y bash vim

### Install grpc
# prevent tzdata interactive input
ARG DEBIAN_FRONTEND=noninteractive

# Install requirements
RUN apt-get update
RUN apt-get install -y tzdata
RUN apt-get install -y sudo build-essential gcc git pkg-config

# using openssl instead of boringssl
RUN apt-get install -y libssl-dev

# Install cmake 3.24.1
RUN apt-get install -y wget                                                                \
    && wget https://github.com/Kitware/CMake/releases/download/v3.21.4/cmake-3.21.4.tar.gz \
    && tar zxvf cmake-3.21.4.tar.gz                                                        \
    && cd cmake-3.21.4                                                                     \
    && ./bootstrap                                                                         \
    && make && make install && cd ..                                                       \
    && rm -rf /cmake-3.21.4 && rm cmake-3.21.4.tar.gz                                      \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

ENV BASE_PATH=/opt/grpc

# Download gRPC and initialise submodules so as to later install these
WORKDIR /opt
RUN git clone -b v1.50.1 https://github.com/grpc/grpc --recursive
WORKDIR ${BASE_PATH}
# Commnet this line to avoid unwannted submodule change
# RUN git submodule update --init

# install after build (https://github.com/grpc/grpc/blob/v1.50.1/BUILDING.md)
RUN mkdir -p ./cmake/build
RUN cmake -S . -B ./cmake/build         \
    -DCMAKE_CXX_STANDARD=17         \
    -DgRPC_INSTALL=ON               \
    -DCMAKE_BUILD_TYPE=Release      \
    -DgRPC_ABSL_PROVIDER=module     \
    -DgRPC_CARES_PROVIDER=module    \
    -DgRPC_PROTOBUF_PROVIDER=module \
    -DgRPC_RE2_PROVIDER=module      \
    -DgRPC_SSL_PROVIDER=package     \
    -DgRPC_ZLIB_PROVIDER=module
RUN cmake --build ./cmake/build --target install

WORKDIR ${BASE_PATH}

WORKDIR /app/
